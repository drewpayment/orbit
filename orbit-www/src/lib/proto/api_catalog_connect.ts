// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file api_catalog.proto (package idp.api_catalog.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateSchemaRequest, CreateSchemaResponse, DeleteSchemaRequest, DeleteSchemaResponse, GetSchemaDependenciesRequest, GetSchemaDependenciesResponse, GetSchemaRequest, GetSchemaResponse, ListConsumersRequest, ListConsumersResponse, ListSchemasRequest, ListSchemasResponse, RegisterConsumerRequest, RegisterConsumerResponse, RemoveConsumerRequest, RemoveConsumerResponse, SearchSchemasRequest, SearchSchemasResponse, UpdateSchemaRequest, UpdateSchemaResponse, ValidateSchemaRequest, ValidateSchemaResponse } from "./api_catalog_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * API Catalog Service
 *
 * @generated from service idp.api_catalog.v1.APICatalogService
 */
export const APICatalogService = {
  typeName: "idp.api_catalog.v1.APICatalogService",
  methods: {
    /**
     * Schema management
     *
     * @generated from rpc idp.api_catalog.v1.APICatalogService.CreateSchema
     */
    createSchema: {
      name: "CreateSchema",
      I: CreateSchemaRequest,
      O: CreateSchemaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc idp.api_catalog.v1.APICatalogService.GetSchema
     */
    getSchema: {
      name: "GetSchema",
      I: GetSchemaRequest,
      O: GetSchemaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc idp.api_catalog.v1.APICatalogService.ListSchemas
     */
    listSchemas: {
      name: "ListSchemas",
      I: ListSchemasRequest,
      O: ListSchemasResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc idp.api_catalog.v1.APICatalogService.UpdateSchema
     */
    updateSchema: {
      name: "UpdateSchema",
      I: UpdateSchemaRequest,
      O: UpdateSchemaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc idp.api_catalog.v1.APICatalogService.DeleteSchema
     */
    deleteSchema: {
      name: "DeleteSchema",
      I: DeleteSchemaRequest,
      O: DeleteSchemaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Schema validation
     *
     * @generated from rpc idp.api_catalog.v1.APICatalogService.ValidateSchema
     */
    validateSchema: {
      name: "ValidateSchema",
      I: ValidateSchemaRequest,
      O: ValidateSchemaResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Consumer management
     *
     * @generated from rpc idp.api_catalog.v1.APICatalogService.RegisterConsumer
     */
    registerConsumer: {
      name: "RegisterConsumer",
      I: RegisterConsumerRequest,
      O: RegisterConsumerResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc idp.api_catalog.v1.APICatalogService.ListConsumers
     */
    listConsumers: {
      name: "ListConsumers",
      I: ListConsumersRequest,
      O: ListConsumersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc idp.api_catalog.v1.APICatalogService.RemoveConsumer
     */
    removeConsumer: {
      name: "RemoveConsumer",
      I: RemoveConsumerRequest,
      O: RemoveConsumerResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Discovery
     *
     * @generated from rpc idp.api_catalog.v1.APICatalogService.SearchSchemas
     */
    searchSchemas: {
      name: "SearchSchemas",
      I: SearchSchemasRequest,
      O: SearchSchemasResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc idp.api_catalog.v1.APICatalogService.GetSchemaDependencies
     */
    getSchemaDependencies: {
      name: "GetSchemaDependencies",
      I: GetSchemaDependenciesRequest,
      O: GetSchemaDependenciesResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

