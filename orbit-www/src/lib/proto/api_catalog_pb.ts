// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file api_catalog.proto (package idp.api_catalog.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EntityMetadata, Filter, RepositoryRef, Response, Sort, UserRef, WorkspaceRef } from "./common_pb";
import { file_common } from "./common_pb";
import type { PaginationRequest, PaginationResponse } from "./pagination_pb";
import { file_pagination } from "./pagination_pb";
import type { Any, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file api_catalog.proto.
 */
export const file_api_catalog: GenFile = /*@__PURE__*/
  fileDesc("", [file_common, file_pagination, file_google_protobuf_timestamp, file_google_protobuf_any]);

/**
 * API Schema entity
 *
 * @generated from message idp.api_catalog.v1.APISchema
 */
export type APISchema = Message<"idp.api_catalog.v1.APISchema"> & {
  /**
   * @generated from field: idp.common.v1.EntityMetadata metadata = 1;
   */
  metadata?: EntityMetadata;

  /**
   * @generated from field: idp.common.v1.WorkspaceRef workspace = 2;
   */
  workspace?: WorkspaceRef;

  /**
   * Optional
   *
   * @generated from field: idp.common.v1.RepositoryRef repository = 3;
   */
  repository?: RepositoryRef;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string slug = 5;
   */
  slug: string;

  /**
   * @generated from field: string version = 6;
   */
  version: string;

  /**
   * @generated from field: string description = 7;
   */
  description: string;

  /**
   * Schema definition
   *
   * @generated from field: idp.api_catalog.v1.SchemaType schema_type = 8;
   */
  schemaType: SchemaType;

  /**
   * JSON representation
   *
   * @generated from field: google.protobuf.Any schema_content = 9;
   */
  schemaContent?: Any;

  /**
   * Original schema content
   *
   * @generated from field: string raw_content = 10;
   */
  rawContent: string;

  /**
   * Metadata
   *
   * @generated from field: repeated string tags = 11;
   */
  tags: string[];

  /**
   * @generated from field: idp.api_catalog.v1.ContactInfo contact_info = 12;
   */
  contactInfo?: ContactInfo;

  /**
   * @generated from field: string license = 13;
   */
  license: string;

  /**
   * Lifecycle
   *
   * @generated from field: idp.api_catalog.v1.SchemaStatus status = 14;
   */
  status: SchemaStatus;

  /**
   * @generated from field: google.protobuf.Timestamp published_at = 15;
   */
  publishedAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp deprecated_at = 16;
   */
  deprecatedAt?: Timestamp;

  /**
   * Relations
   *
   * @generated from field: repeated idp.api_catalog.v1.APIEndpoint endpoints = 17;
   */
  endpoints: APIEndpoint[];

  /**
   * @generated from field: repeated idp.api_catalog.v1.APIConsumer consumers = 18;
   */
  consumers: APIConsumer[];

  /**
   * @generated from field: idp.api_catalog.v1.SchemaStats stats = 19;
   */
  stats?: SchemaStats;
};

/**
 * Describes the message idp.api_catalog.v1.APISchema.
 * Use `create(APISchemaSchema)` to create a new message.
 */
export const APISchemaSchema: GenMessage<APISchema> = /*@__PURE__*/
  messageDesc(file_api_catalog, 0);

/**
 * @generated from message idp.api_catalog.v1.ContactInfo
 */
export type ContactInfo = Message<"idp.api_catalog.v1.ContactInfo"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string email = 2;
   */
  email: string;

  /**
   * @generated from field: string url = 3;
   */
  url: string;
};

/**
 * Describes the message idp.api_catalog.v1.ContactInfo.
 * Use `create(ContactInfoSchema)` to create a new message.
 */
export const ContactInfoSchema: GenMessage<ContactInfo> = /*@__PURE__*/
  messageDesc(file_api_catalog, 1);

/**
 * API Endpoint
 *
 * @generated from message idp.api_catalog.v1.APIEndpoint
 */
export type APIEndpoint = Message<"idp.api_catalog.v1.APIEndpoint"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string schema_id = 2;
   */
  schemaId: string;

  /**
   * @generated from field: string method = 3;
   */
  method: string;

  /**
   * @generated from field: string path = 4;
   */
  path: string;

  /**
   * @generated from field: string summary = 5;
   */
  summary: string;

  /**
   * @generated from field: string description = 6;
   */
  description: string;

  /**
   * @generated from field: repeated idp.api_catalog.v1.APIParameter parameters = 7;
   */
  parameters: APIParameter[];

  /**
   * @generated from field: idp.api_catalog.v1.APIRequestBody request_body = 8;
   */
  requestBody?: APIRequestBody;

  /**
   * @generated from field: repeated idp.api_catalog.v1.APIResponse responses = 9;
   */
  responses: APIResponse[];

  /**
   * @generated from field: repeated string tags = 10;
   */
  tags: string[];
};

/**
 * Describes the message idp.api_catalog.v1.APIEndpoint.
 * Use `create(APIEndpointSchema)` to create a new message.
 */
export const APIEndpointSchema: GenMessage<APIEndpoint> = /*@__PURE__*/
  messageDesc(file_api_catalog, 2);

/**
 * @generated from message idp.api_catalog.v1.APIParameter
 */
export type APIParameter = Message<"idp.api_catalog.v1.APIParameter"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: idp.api_catalog.v1.ParameterLocation location = 2;
   */
  location: ParameterLocation;

  /**
   * @generated from field: bool required = 3;
   */
  required: boolean;

  /**
   * @generated from field: string type = 4;
   */
  type: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from field: google.protobuf.Any example = 6;
   */
  example?: Any;
};

/**
 * Describes the message idp.api_catalog.v1.APIParameter.
 * Use `create(APIParameterSchema)` to create a new message.
 */
export const APIParameterSchema: GenMessage<APIParameter> = /*@__PURE__*/
  messageDesc(file_api_catalog, 3);

/**
 * @generated from message idp.api_catalog.v1.APIRequestBody
 */
export type APIRequestBody = Message<"idp.api_catalog.v1.APIRequestBody"> & {
  /**
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * @generated from field: bool required = 2;
   */
  required: boolean;

  /**
   * @generated from field: map<string, idp.api_catalog.v1.MediaType> content = 3;
   */
  content: { [key: string]: MediaType };
};

/**
 * Describes the message idp.api_catalog.v1.APIRequestBody.
 * Use `create(APIRequestBodySchema)` to create a new message.
 */
export const APIRequestBodySchema: GenMessage<APIRequestBody> = /*@__PURE__*/
  messageDesc(file_api_catalog, 4);

/**
 * @generated from message idp.api_catalog.v1.APIResponse
 */
export type APIResponse = Message<"idp.api_catalog.v1.APIResponse"> & {
  /**
   * @generated from field: string code = 1;
   */
  code: string;

  /**
   * @generated from field: string description = 2;
   */
  description: string;

  /**
   * @generated from field: map<string, idp.api_catalog.v1.MediaType> content = 3;
   */
  content: { [key: string]: MediaType };

  /**
   * @generated from field: map<string, string> headers = 4;
   */
  headers: { [key: string]: string };
};

/**
 * Describes the message idp.api_catalog.v1.APIResponse.
 * Use `create(APIResponseSchema)` to create a new message.
 */
export const APIResponseSchema: GenMessage<APIResponse> = /*@__PURE__*/
  messageDesc(file_api_catalog, 5);

/**
 * @generated from message idp.api_catalog.v1.MediaType
 */
export type MediaType = Message<"idp.api_catalog.v1.MediaType"> & {
  /**
   * @generated from field: google.protobuf.Any schema = 1;
   */
  schema?: Any;

  /**
   * @generated from field: google.protobuf.Any example = 2;
   */
  example?: Any;
};

/**
 * Describes the message idp.api_catalog.v1.MediaType.
 * Use `create(MediaTypeSchema)` to create a new message.
 */
export const MediaTypeSchema: GenMessage<MediaType> = /*@__PURE__*/
  messageDesc(file_api_catalog, 6);

/**
 * API Consumer
 *
 * @generated from message idp.api_catalog.v1.APIConsumer
 */
export type APIConsumer = Message<"idp.api_catalog.v1.APIConsumer"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string schema_id = 2;
   */
  schemaId: string;

  /**
   * Optional
   *
   * @generated from field: idp.common.v1.RepositoryRef repository = 3;
   */
  repository?: RepositoryRef;

  /**
   * @generated from field: idp.api_catalog.v1.ConsumerType consumer_type = 4;
   */
  consumerType: ConsumerType;

  /**
   * @generated from field: string name = 5;
   */
  name: string;

  /**
   * @generated from field: string contact_email = 6;
   */
  contactEmail: string;

  /**
   * @generated from field: google.protobuf.Timestamp registered_at = 7;
   */
  registeredAt?: Timestamp;

  /**
   * @generated from field: idp.common.v1.UserRef registered_by = 8;
   */
  registeredBy?: UserRef;
};

/**
 * Describes the message idp.api_catalog.v1.APIConsumer.
 * Use `create(APIConsumerSchema)` to create a new message.
 */
export const APIConsumerSchema: GenMessage<APIConsumer> = /*@__PURE__*/
  messageDesc(file_api_catalog, 7);

/**
 * Schema statistics
 *
 * @generated from message idp.api_catalog.v1.SchemaStats
 */
export type SchemaStats = Message<"idp.api_catalog.v1.SchemaStats"> & {
  /**
   * @generated from field: int32 endpoint_count = 1;
   */
  endpointCount: number;

  /**
   * @generated from field: int32 consumer_count = 2;
   */
  consumerCount: number;

  /**
   * @generated from field: google.protobuf.Timestamp last_updated = 3;
   */
  lastUpdated?: Timestamp;

  /**
   * @generated from field: int32 version_count = 4;
   */
  versionCount: number;
};

/**
 * Describes the message idp.api_catalog.v1.SchemaStats.
 * Use `create(SchemaStatsSchema)` to create a new message.
 */
export const SchemaStatsSchema: GenMessage<SchemaStats> = /*@__PURE__*/
  messageDesc(file_api_catalog, 8);

/**
 * @generated from message idp.api_catalog.v1.CreateSchemaRequest
 */
export type CreateSchemaRequest = Message<"idp.api_catalog.v1.CreateSchemaRequest"> & {
  /**
   * @generated from field: string workspace_id = 1;
   */
  workspaceId: string;

  /**
   * Optional
   *
   * @generated from field: string repository_id = 2;
   */
  repositoryId: string;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string slug = 4;
   */
  slug: string;

  /**
   * @generated from field: string version = 5;
   */
  version: string;

  /**
   * @generated from field: string description = 6;
   */
  description: string;

  /**
   * @generated from field: idp.api_catalog.v1.SchemaType schema_type = 7;
   */
  schemaType: SchemaType;

  /**
   * @generated from field: string raw_content = 8;
   */
  rawContent: string;

  /**
   * @generated from field: repeated string tags = 9;
   */
  tags: string[];

  /**
   * @generated from field: idp.api_catalog.v1.ContactInfo contact_info = 10;
   */
  contactInfo?: ContactInfo;

  /**
   * @generated from field: string license = 11;
   */
  license: string;
};

/**
 * Describes the message idp.api_catalog.v1.CreateSchemaRequest.
 * Use `create(CreateSchemaRequestSchema)` to create a new message.
 */
export const CreateSchemaRequestSchema: GenMessage<CreateSchemaRequest> = /*@__PURE__*/
  messageDesc(file_api_catalog, 9);

/**
 * @generated from message idp.api_catalog.v1.CreateSchemaResponse
 */
export type CreateSchemaResponse = Message<"idp.api_catalog.v1.CreateSchemaResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: idp.api_catalog.v1.APISchema schema = 2;
   */
  schema?: APISchema;
};

/**
 * Describes the message idp.api_catalog.v1.CreateSchemaResponse.
 * Use `create(CreateSchemaResponseSchema)` to create a new message.
 */
export const CreateSchemaResponseSchema: GenMessage<CreateSchemaResponse> = /*@__PURE__*/
  messageDesc(file_api_catalog, 10);

/**
 * @generated from message idp.api_catalog.v1.GetSchemaRequest
 */
export type GetSchemaRequest = Message<"idp.api_catalog.v1.GetSchemaRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * Optional, gets latest if not specified
   *
   * @generated from field: string version = 2;
   */
  version: string;
};

/**
 * Describes the message idp.api_catalog.v1.GetSchemaRequest.
 * Use `create(GetSchemaRequestSchema)` to create a new message.
 */
export const GetSchemaRequestSchema: GenMessage<GetSchemaRequest> = /*@__PURE__*/
  messageDesc(file_api_catalog, 11);

/**
 * @generated from message idp.api_catalog.v1.GetSchemaResponse
 */
export type GetSchemaResponse = Message<"idp.api_catalog.v1.GetSchemaResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: idp.api_catalog.v1.APISchema schema = 2;
   */
  schema?: APISchema;
};

/**
 * Describes the message idp.api_catalog.v1.GetSchemaResponse.
 * Use `create(GetSchemaResponseSchema)` to create a new message.
 */
export const GetSchemaResponseSchema: GenMessage<GetSchemaResponse> = /*@__PURE__*/
  messageDesc(file_api_catalog, 12);

/**
 * @generated from message idp.api_catalog.v1.ListSchemasRequest
 */
export type ListSchemasRequest = Message<"idp.api_catalog.v1.ListSchemasRequest"> & {
  /**
   * @generated from field: string workspace_id = 1;
   */
  workspaceId: string;

  /**
   * Optional filter
   *
   * @generated from field: string repository_id = 2;
   */
  repositoryId: string;

  /**
   * @generated from field: idp.common.v1.PaginationRequest pagination = 3;
   */
  pagination?: PaginationRequest;

  /**
   * @generated from field: repeated idp.common.v1.Filter filters = 4;
   */
  filters: Filter[];

  /**
   * @generated from field: repeated idp.common.v1.Sort sort = 5;
   */
  sort: Sort[];
};

/**
 * Describes the message idp.api_catalog.v1.ListSchemasRequest.
 * Use `create(ListSchemasRequestSchema)` to create a new message.
 */
export const ListSchemasRequestSchema: GenMessage<ListSchemasRequest> = /*@__PURE__*/
  messageDesc(file_api_catalog, 13);

/**
 * @generated from message idp.api_catalog.v1.ListSchemasResponse
 */
export type ListSchemasResponse = Message<"idp.api_catalog.v1.ListSchemasResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: repeated idp.api_catalog.v1.APISchema schemas = 2;
   */
  schemas: APISchema[];

  /**
   * @generated from field: idp.common.v1.PaginationResponse pagination = 3;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message idp.api_catalog.v1.ListSchemasResponse.
 * Use `create(ListSchemasResponseSchema)` to create a new message.
 */
export const ListSchemasResponseSchema: GenMessage<ListSchemasResponse> = /*@__PURE__*/
  messageDesc(file_api_catalog, 14);

/**
 * @generated from message idp.api_catalog.v1.UpdateSchemaRequest
 */
export type UpdateSchemaRequest = Message<"idp.api_catalog.v1.UpdateSchemaRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: string raw_content = 4;
   */
  rawContent: string;

  /**
   * @generated from field: repeated string tags = 5;
   */
  tags: string[];

  /**
   * @generated from field: idp.api_catalog.v1.ContactInfo contact_info = 6;
   */
  contactInfo?: ContactInfo;

  /**
   * @generated from field: string license = 7;
   */
  license: string;

  /**
   * @generated from field: idp.api_catalog.v1.SchemaStatus status = 8;
   */
  status: SchemaStatus;
};

/**
 * Describes the message idp.api_catalog.v1.UpdateSchemaRequest.
 * Use `create(UpdateSchemaRequestSchema)` to create a new message.
 */
export const UpdateSchemaRequestSchema: GenMessage<UpdateSchemaRequest> = /*@__PURE__*/
  messageDesc(file_api_catalog, 15);

/**
 * @generated from message idp.api_catalog.v1.UpdateSchemaResponse
 */
export type UpdateSchemaResponse = Message<"idp.api_catalog.v1.UpdateSchemaResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: idp.api_catalog.v1.APISchema schema = 2;
   */
  schema?: APISchema;
};

/**
 * Describes the message idp.api_catalog.v1.UpdateSchemaResponse.
 * Use `create(UpdateSchemaResponseSchema)` to create a new message.
 */
export const UpdateSchemaResponseSchema: GenMessage<UpdateSchemaResponse> = /*@__PURE__*/
  messageDesc(file_api_catalog, 16);

/**
 * @generated from message idp.api_catalog.v1.DeleteSchemaRequest
 */
export type DeleteSchemaRequest = Message<"idp.api_catalog.v1.DeleteSchemaRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message idp.api_catalog.v1.DeleteSchemaRequest.
 * Use `create(DeleteSchemaRequestSchema)` to create a new message.
 */
export const DeleteSchemaRequestSchema: GenMessage<DeleteSchemaRequest> = /*@__PURE__*/
  messageDesc(file_api_catalog, 17);

/**
 * @generated from message idp.api_catalog.v1.DeleteSchemaResponse
 */
export type DeleteSchemaResponse = Message<"idp.api_catalog.v1.DeleteSchemaResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;
};

/**
 * Describes the message idp.api_catalog.v1.DeleteSchemaResponse.
 * Use `create(DeleteSchemaResponseSchema)` to create a new message.
 */
export const DeleteSchemaResponseSchema: GenMessage<DeleteSchemaResponse> = /*@__PURE__*/
  messageDesc(file_api_catalog, 18);

/**
 * Schema validation
 *
 * @generated from message idp.api_catalog.v1.ValidateSchemaRequest
 */
export type ValidateSchemaRequest = Message<"idp.api_catalog.v1.ValidateSchemaRequest"> & {
  /**
   * @generated from field: idp.api_catalog.v1.SchemaType schema_type = 1;
   */
  schemaType: SchemaType;

  /**
   * @generated from field: string raw_content = 2;
   */
  rawContent: string;
};

/**
 * Describes the message idp.api_catalog.v1.ValidateSchemaRequest.
 * Use `create(ValidateSchemaRequestSchema)` to create a new message.
 */
export const ValidateSchemaRequestSchema: GenMessage<ValidateSchemaRequest> = /*@__PURE__*/
  messageDesc(file_api_catalog, 19);

/**
 * @generated from message idp.api_catalog.v1.ValidateSchemaResponse
 */
export type ValidateSchemaResponse = Message<"idp.api_catalog.v1.ValidateSchemaResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: bool is_valid = 2;
   */
  isValid: boolean;

  /**
   * @generated from field: repeated idp.api_catalog.v1.ValidationError validation_errors = 3;
   */
  validationErrors: ValidationError[];
};

/**
 * Describes the message idp.api_catalog.v1.ValidateSchemaResponse.
 * Use `create(ValidateSchemaResponseSchema)` to create a new message.
 */
export const ValidateSchemaResponseSchema: GenMessage<ValidateSchemaResponse> = /*@__PURE__*/
  messageDesc(file_api_catalog, 20);

/**
 * @generated from message idp.api_catalog.v1.ValidationError
 */
export type ValidationError = Message<"idp.api_catalog.v1.ValidationError"> & {
  /**
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: string error_code = 3;
   */
  errorCode: string;
};

/**
 * Describes the message idp.api_catalog.v1.ValidationError.
 * Use `create(ValidationErrorSchema)` to create a new message.
 */
export const ValidationErrorSchema: GenMessage<ValidationError> = /*@__PURE__*/
  messageDesc(file_api_catalog, 21);

/**
 * Consumer management
 *
 * @generated from message idp.api_catalog.v1.RegisterConsumerRequest
 */
export type RegisterConsumerRequest = Message<"idp.api_catalog.v1.RegisterConsumerRequest"> & {
  /**
   * @generated from field: string schema_id = 1;
   */
  schemaId: string;

  /**
   * Optional
   *
   * @generated from field: string repository_id = 2;
   */
  repositoryId: string;

  /**
   * @generated from field: idp.api_catalog.v1.ConsumerType consumer_type = 3;
   */
  consumerType: ConsumerType;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: string contact_email = 5;
   */
  contactEmail: string;
};

/**
 * Describes the message idp.api_catalog.v1.RegisterConsumerRequest.
 * Use `create(RegisterConsumerRequestSchema)` to create a new message.
 */
export const RegisterConsumerRequestSchema: GenMessage<RegisterConsumerRequest> = /*@__PURE__*/
  messageDesc(file_api_catalog, 22);

/**
 * @generated from message idp.api_catalog.v1.RegisterConsumerResponse
 */
export type RegisterConsumerResponse = Message<"idp.api_catalog.v1.RegisterConsumerResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: idp.api_catalog.v1.APIConsumer consumer = 2;
   */
  consumer?: APIConsumer;
};

/**
 * Describes the message idp.api_catalog.v1.RegisterConsumerResponse.
 * Use `create(RegisterConsumerResponseSchema)` to create a new message.
 */
export const RegisterConsumerResponseSchema: GenMessage<RegisterConsumerResponse> = /*@__PURE__*/
  messageDesc(file_api_catalog, 23);

/**
 * @generated from message idp.api_catalog.v1.ListConsumersRequest
 */
export type ListConsumersRequest = Message<"idp.api_catalog.v1.ListConsumersRequest"> & {
  /**
   * @generated from field: string schema_id = 1;
   */
  schemaId: string;

  /**
   * @generated from field: idp.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * @generated from field: repeated idp.common.v1.Filter filters = 3;
   */
  filters: Filter[];
};

/**
 * Describes the message idp.api_catalog.v1.ListConsumersRequest.
 * Use `create(ListConsumersRequestSchema)` to create a new message.
 */
export const ListConsumersRequestSchema: GenMessage<ListConsumersRequest> = /*@__PURE__*/
  messageDesc(file_api_catalog, 24);

/**
 * @generated from message idp.api_catalog.v1.ListConsumersResponse
 */
export type ListConsumersResponse = Message<"idp.api_catalog.v1.ListConsumersResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: repeated idp.api_catalog.v1.APIConsumer consumers = 2;
   */
  consumers: APIConsumer[];

  /**
   * @generated from field: idp.common.v1.PaginationResponse pagination = 3;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message idp.api_catalog.v1.ListConsumersResponse.
 * Use `create(ListConsumersResponseSchema)` to create a new message.
 */
export const ListConsumersResponseSchema: GenMessage<ListConsumersResponse> = /*@__PURE__*/
  messageDesc(file_api_catalog, 25);

/**
 * @generated from message idp.api_catalog.v1.RemoveConsumerRequest
 */
export type RemoveConsumerRequest = Message<"idp.api_catalog.v1.RemoveConsumerRequest"> & {
  /**
   * @generated from field: string schema_id = 1;
   */
  schemaId: string;

  /**
   * @generated from field: string consumer_id = 2;
   */
  consumerId: string;
};

/**
 * Describes the message idp.api_catalog.v1.RemoveConsumerRequest.
 * Use `create(RemoveConsumerRequestSchema)` to create a new message.
 */
export const RemoveConsumerRequestSchema: GenMessage<RemoveConsumerRequest> = /*@__PURE__*/
  messageDesc(file_api_catalog, 26);

/**
 * @generated from message idp.api_catalog.v1.RemoveConsumerResponse
 */
export type RemoveConsumerResponse = Message<"idp.api_catalog.v1.RemoveConsumerResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;
};

/**
 * Describes the message idp.api_catalog.v1.RemoveConsumerResponse.
 * Use `create(RemoveConsumerResponseSchema)` to create a new message.
 */
export const RemoveConsumerResponseSchema: GenMessage<RemoveConsumerResponse> = /*@__PURE__*/
  messageDesc(file_api_catalog, 27);

/**
 * Discovery
 *
 * @generated from message idp.api_catalog.v1.SearchSchemasRequest
 */
export type SearchSchemasRequest = Message<"idp.api_catalog.v1.SearchSchemasRequest"> & {
  /**
   * @generated from field: string workspace_id = 1;
   */
  workspaceId: string;

  /**
   * @generated from field: string query = 2;
   */
  query: string;

  /**
   * @generated from field: repeated idp.api_catalog.v1.SchemaType schema_types = 3;
   */
  schemaTypes: SchemaType[];

  /**
   * @generated from field: repeated string tags = 4;
   */
  tags: string[];

  /**
   * @generated from field: idp.common.v1.PaginationRequest pagination = 5;
   */
  pagination?: PaginationRequest;
};

/**
 * Describes the message idp.api_catalog.v1.SearchSchemasRequest.
 * Use `create(SearchSchemasRequestSchema)` to create a new message.
 */
export const SearchSchemasRequestSchema: GenMessage<SearchSchemasRequest> = /*@__PURE__*/
  messageDesc(file_api_catalog, 28);

/**
 * @generated from message idp.api_catalog.v1.SearchSchemasResponse
 */
export type SearchSchemasResponse = Message<"idp.api_catalog.v1.SearchSchemasResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: repeated idp.api_catalog.v1.APISchema schemas = 2;
   */
  schemas: APISchema[];

  /**
   * @generated from field: idp.common.v1.PaginationResponse pagination = 3;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message idp.api_catalog.v1.SearchSchemasResponse.
 * Use `create(SearchSchemasResponseSchema)` to create a new message.
 */
export const SearchSchemasResponseSchema: GenMessage<SearchSchemasResponse> = /*@__PURE__*/
  messageDesc(file_api_catalog, 29);

/**
 * @generated from message idp.api_catalog.v1.GetSchemaDependenciesRequest
 */
export type GetSchemaDependenciesRequest = Message<"idp.api_catalog.v1.GetSchemaDependenciesRequest"> & {
  /**
   * @generated from field: string schema_id = 1;
   */
  schemaId: string;

  /**
   * "dependencies", "dependents", "both"
   *
   * @generated from field: string direction = 2;
   */
  direction: string;
};

/**
 * Describes the message idp.api_catalog.v1.GetSchemaDependenciesRequest.
 * Use `create(GetSchemaDependenciesRequestSchema)` to create a new message.
 */
export const GetSchemaDependenciesRequestSchema: GenMessage<GetSchemaDependenciesRequest> = /*@__PURE__*/
  messageDesc(file_api_catalog, 30);

/**
 * @generated from message idp.api_catalog.v1.GetSchemaDependenciesResponse
 */
export type GetSchemaDependenciesResponse = Message<"idp.api_catalog.v1.GetSchemaDependenciesResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: repeated idp.api_catalog.v1.SchemaDependency dependencies = 2;
   */
  dependencies: SchemaDependency[];
};

/**
 * Describes the message idp.api_catalog.v1.GetSchemaDependenciesResponse.
 * Use `create(GetSchemaDependenciesResponseSchema)` to create a new message.
 */
export const GetSchemaDependenciesResponseSchema: GenMessage<GetSchemaDependenciesResponse> = /*@__PURE__*/
  messageDesc(file_api_catalog, 31);

/**
 * @generated from message idp.api_catalog.v1.SchemaDependency
 */
export type SchemaDependency = Message<"idp.api_catalog.v1.SchemaDependency"> & {
  /**
   * @generated from field: idp.api_catalog.v1.APISchema schema = 1;
   */
  schema?: APISchema;

  /**
   * "imports", "extends", "references"
   *
   * @generated from field: string relationship_type = 2;
   */
  relationshipType: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message idp.api_catalog.v1.SchemaDependency.
 * Use `create(SchemaDependencySchema)` to create a new message.
 */
export const SchemaDependencySchema: GenMessage<SchemaDependency> = /*@__PURE__*/
  messageDesc(file_api_catalog, 32);

/**
 * @generated from enum idp.api_catalog.v1.SchemaType
 */
export enum SchemaType {
  /**
   * @generated from enum value: SCHEMA_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SCHEMA_TYPE_OPENAPI = 1;
   */
  OPENAPI = 1,

  /**
   * @generated from enum value: SCHEMA_TYPE_GRAPHQL = 2;
   */
  GRAPHQL = 2,

  /**
   * @generated from enum value: SCHEMA_TYPE_PROTOBUF = 3;
   */
  PROTOBUF = 3,

  /**
   * @generated from enum value: SCHEMA_TYPE_AVRO = 4;
   */
  AVRO = 4,

  /**
   * @generated from enum value: SCHEMA_TYPE_JSON_SCHEMA = 5;
   */
  JSON_SCHEMA = 5,
}

/**
 * Describes the enum idp.api_catalog.v1.SchemaType.
 */
export const SchemaTypeSchema: GenEnum<SchemaType> = /*@__PURE__*/
  enumDesc(file_api_catalog, 0);

/**
 * @generated from enum idp.api_catalog.v1.SchemaStatus
 */
export enum SchemaStatus {
  /**
   * @generated from enum value: SCHEMA_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SCHEMA_STATUS_DRAFT = 1;
   */
  DRAFT = 1,

  /**
   * @generated from enum value: SCHEMA_STATUS_PUBLISHED = 2;
   */
  PUBLISHED = 2,

  /**
   * @generated from enum value: SCHEMA_STATUS_DEPRECATED = 3;
   */
  DEPRECATED = 3,
}

/**
 * Describes the enum idp.api_catalog.v1.SchemaStatus.
 */
export const SchemaStatusSchema: GenEnum<SchemaStatus> = /*@__PURE__*/
  enumDesc(file_api_catalog, 1);

/**
 * @generated from enum idp.api_catalog.v1.ParameterLocation
 */
export enum ParameterLocation {
  /**
   * @generated from enum value: PARAMETER_LOCATION_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PARAMETER_LOCATION_QUERY = 1;
   */
  QUERY = 1,

  /**
   * @generated from enum value: PARAMETER_LOCATION_PATH = 2;
   */
  PATH = 2,

  /**
   * @generated from enum value: PARAMETER_LOCATION_HEADER = 3;
   */
  HEADER = 3,

  /**
   * @generated from enum value: PARAMETER_LOCATION_COOKIE = 4;
   */
  COOKIE = 4,
}

/**
 * Describes the enum idp.api_catalog.v1.ParameterLocation.
 */
export const ParameterLocationSchema: GenEnum<ParameterLocation> = /*@__PURE__*/
  enumDesc(file_api_catalog, 2);

/**
 * @generated from enum idp.api_catalog.v1.ConsumerType
 */
export enum ConsumerType {
  /**
   * @generated from enum value: CONSUMER_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: CONSUMER_TYPE_REPOSITORY = 1;
   */
  REPOSITORY = 1,

  /**
   * @generated from enum value: CONSUMER_TYPE_EXTERNAL = 2;
   */
  EXTERNAL = 2,
}

/**
 * Describes the enum idp.api_catalog.v1.ConsumerType.
 */
export const ConsumerTypeSchema: GenEnum<ConsumerType> = /*@__PURE__*/
  enumDesc(file_api_catalog, 3);

/**
 * API Catalog Service
 *
 * @generated from service idp.api_catalog.v1.APICatalogService
 */
export const APICatalogService: GenService<{
  /**
   * Schema management
   *
   * @generated from rpc idp.api_catalog.v1.APICatalogService.CreateSchema
   */
  createSchema: {
    methodKind: "unary";
    input: typeof CreateSchemaRequestSchema;
    output: typeof CreateSchemaResponseSchema;
  },
  /**
   * @generated from rpc idp.api_catalog.v1.APICatalogService.GetSchema
   */
  getSchema: {
    methodKind: "unary";
    input: typeof GetSchemaRequestSchema;
    output: typeof GetSchemaResponseSchema;
  },
  /**
   * @generated from rpc idp.api_catalog.v1.APICatalogService.ListSchemas
   */
  listSchemas: {
    methodKind: "unary";
    input: typeof ListSchemasRequestSchema;
    output: typeof ListSchemasResponseSchema;
  },
  /**
   * @generated from rpc idp.api_catalog.v1.APICatalogService.UpdateSchema
   */
  updateSchema: {
    methodKind: "unary";
    input: typeof UpdateSchemaRequestSchema;
    output: typeof UpdateSchemaResponseSchema;
  },
  /**
   * @generated from rpc idp.api_catalog.v1.APICatalogService.DeleteSchema
   */
  deleteSchema: {
    methodKind: "unary";
    input: typeof DeleteSchemaRequestSchema;
    output: typeof DeleteSchemaResponseSchema;
  },
  /**
   * Schema validation
   *
   * @generated from rpc idp.api_catalog.v1.APICatalogService.ValidateSchema
   */
  validateSchema: {
    methodKind: "unary";
    input: typeof ValidateSchemaRequestSchema;
    output: typeof ValidateSchemaResponseSchema;
  },
  /**
   * Consumer management
   *
   * @generated from rpc idp.api_catalog.v1.APICatalogService.RegisterConsumer
   */
  registerConsumer: {
    methodKind: "unary";
    input: typeof RegisterConsumerRequestSchema;
    output: typeof RegisterConsumerResponseSchema;
  },
  /**
   * @generated from rpc idp.api_catalog.v1.APICatalogService.ListConsumers
   */
  listConsumers: {
    methodKind: "unary";
    input: typeof ListConsumersRequestSchema;
    output: typeof ListConsumersResponseSchema;
  },
  /**
   * @generated from rpc idp.api_catalog.v1.APICatalogService.RemoveConsumer
   */
  removeConsumer: {
    methodKind: "unary";
    input: typeof RemoveConsumerRequestSchema;
    output: typeof RemoveConsumerResponseSchema;
  },
  /**
   * Discovery
   *
   * @generated from rpc idp.api_catalog.v1.APICatalogService.SearchSchemas
   */
  searchSchemas: {
    methodKind: "unary";
    input: typeof SearchSchemasRequestSchema;
    output: typeof SearchSchemasResponseSchema;
  },
  /**
   * @generated from rpc idp.api_catalog.v1.APICatalogService.GetSchemaDependencies
   */
  getSchemaDependencies: {
    methodKind: "unary";
    input: typeof GetSchemaDependenciesRequestSchema;
    output: typeof GetSchemaDependenciesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_api_catalog, 0);

