// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file repository.proto (package idp.repository.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EntityMetadata, Filter, Response, Sort, ValidationRule, Visibility, WorkspaceRef } from "./common_pb";
import { file_common } from "./common_pb";
import type { PaginationRequest, PaginationResponse } from "./pagination_pb";
import { file_pagination } from "./pagination_pb";
import type { Any, Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_any, file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file repository.proto.
 */
export const file_repository: GenFile = /*@__PURE__*/
  fileDesc("", [file_common, file_pagination, file_google_protobuf_timestamp, file_google_protobuf_any]);

/**
 * Repository entity
 *
 * @generated from message idp.repository.v1.Repository
 */
export type Repository = Message<"idp.repository.v1.Repository"> & {
  /**
   * @generated from field: idp.common.v1.EntityMetadata metadata = 1;
   */
  metadata?: EntityMetadata;

  /**
   * @generated from field: idp.common.v1.WorkspaceRef workspace = 2;
   */
  workspace?: WorkspaceRef;

  /**
   * @generated from field: string name = 3;
   */
  name: string;

  /**
   * @generated from field: string slug = 4;
   */
  slug: string;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from field: string git_url = 6;
   */
  gitUrl: string;

  /**
   * @generated from field: idp.common.v1.Visibility visibility = 7;
   */
  visibility: Visibility;

  /**
   * @generated from field: idp.repository.v1.RepositoryType type = 8;
   */
  type: RepositoryType;

  /**
   * Template configuration
   *
   * @generated from field: idp.repository.v1.TemplateConfig template_config = 9;
   */
  templateConfig?: TemplateConfig;

  /**
   * @generated from field: repeated idp.repository.v1.RepositoryVariable variables = 10;
   */
  variables: RepositoryVariable[];

  /**
   * Generation status
   *
   * @generated from field: idp.repository.v1.GenerationStatus generation_status = 11;
   */
  generationStatus: GenerationStatus;

  /**
   * @generated from field: google.protobuf.Timestamp last_generated_at = 12;
   */
  lastGeneratedAt?: Timestamp;

  /**
   * Relations
   *
   * @generated from field: repeated idp.repository.v1.RepositoryRef dependencies = 13;
   */
  dependencies: RepositoryRef[];

  /**
   * @generated from field: repeated idp.repository.v1.RepositoryRef dependents = 14;
   */
  dependents: RepositoryRef[];

  /**
   * @generated from field: idp.repository.v1.RepositoryStats stats = 15;
   */
  stats?: RepositoryStats;
};

/**
 * Describes the message idp.repository.v1.Repository.
 * Use `create(RepositorySchema)` to create a new message.
 */
export const RepositorySchema: GenMessage<Repository> = /*@__PURE__*/
  messageDesc(file_repository, 0);

/**
 * @generated from message idp.repository.v1.RepositoryRef
 */
export type RepositoryRef = Message<"idp.repository.v1.RepositoryRef"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string slug = 3;
   */
  slug: string;
};

/**
 * Describes the message idp.repository.v1.RepositoryRef.
 * Use `create(RepositoryRefSchema)` to create a new message.
 */
export const RepositoryRefSchema: GenMessage<RepositoryRef> = /*@__PURE__*/
  messageDesc(file_repository, 1);

/**
 * Template configuration
 *
 * @generated from message idp.repository.v1.TemplateConfig
 */
export type TemplateConfig = Message<"idp.repository.v1.TemplateConfig"> & {
  /**
   * @generated from field: string base_template = 1;
   */
  baseTemplate: string;

  /**
   * @generated from field: string language = 2;
   */
  language: string;

  /**
   * @generated from field: string framework = 3;
   */
  framework: string;

  /**
   * @generated from field: map<string, google.protobuf.Any> customizations = 4;
   */
  customizations: { [key: string]: Any };

  /**
   * @generated from field: idp.repository.v1.TemplateHooks hooks = 5;
   */
  hooks?: TemplateHooks;
};

/**
 * Describes the message idp.repository.v1.TemplateConfig.
 * Use `create(TemplateConfigSchema)` to create a new message.
 */
export const TemplateConfigSchema: GenMessage<TemplateConfig> = /*@__PURE__*/
  messageDesc(file_repository, 2);

/**
 * @generated from message idp.repository.v1.TemplateHooks
 */
export type TemplateHooks = Message<"idp.repository.v1.TemplateHooks"> & {
  /**
   * @generated from field: repeated string pre_generation = 1;
   */
  preGeneration: string[];

  /**
   * @generated from field: repeated string post_generation = 2;
   */
  postGeneration: string[];
};

/**
 * Describes the message idp.repository.v1.TemplateHooks.
 * Use `create(TemplateHooksSchema)` to create a new message.
 */
export const TemplateHooksSchema: GenMessage<TemplateHooks> = /*@__PURE__*/
  messageDesc(file_repository, 3);

/**
 * Repository variable
 *
 * @generated from message idp.repository.v1.RepositoryVariable
 */
export type RepositoryVariable = Message<"idp.repository.v1.RepositoryVariable"> & {
  /**
   * @generated from field: string key = 1;
   */
  key: string;

  /**
   * @generated from field: string value = 2;
   */
  value: string;

  /**
   * @generated from field: idp.repository.v1.VariableType type = 3;
   */
  type: VariableType;

  /**
   * @generated from field: bool required = 4;
   */
  required: boolean;

  /**
   * @generated from field: string description = 5;
   */
  description: string;

  /**
   * @generated from field: repeated idp.common.v1.ValidationRule validation_rules = 6;
   */
  validationRules: ValidationRule[];

  /**
   * @generated from field: idp.repository.v1.VariableOptions options = 7;
   */
  options?: VariableOptions;
};

/**
 * Describes the message idp.repository.v1.RepositoryVariable.
 * Use `create(RepositoryVariableSchema)` to create a new message.
 */
export const RepositoryVariableSchema: GenMessage<RepositoryVariable> = /*@__PURE__*/
  messageDesc(file_repository, 4);

/**
 * @generated from message idp.repository.v1.VariableOptions
 */
export type VariableOptions = Message<"idp.repository.v1.VariableOptions"> & {
  /**
   * @generated from field: repeated idp.repository.v1.VariableOption options = 1;
   */
  options: VariableOption[];

  /**
   * @generated from field: string default_value = 2;
   */
  defaultValue: string;

  /**
   * @generated from field: string placeholder = 3;
   */
  placeholder: string;
};

/**
 * Describes the message idp.repository.v1.VariableOptions.
 * Use `create(VariableOptionsSchema)` to create a new message.
 */
export const VariableOptionsSchema: GenMessage<VariableOptions> = /*@__PURE__*/
  messageDesc(file_repository, 5);

/**
 * @generated from message idp.repository.v1.VariableOption
 */
export type VariableOption = Message<"idp.repository.v1.VariableOption"> & {
  /**
   * @generated from field: string value = 1;
   */
  value: string;

  /**
   * @generated from field: string label = 2;
   */
  label: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;
};

/**
 * Describes the message idp.repository.v1.VariableOption.
 * Use `create(VariableOptionSchema)` to create a new message.
 */
export const VariableOptionSchema: GenMessage<VariableOption> = /*@__PURE__*/
  messageDesc(file_repository, 6);

/**
 * Repository statistics
 *
 * @generated from message idp.repository.v1.RepositoryStats
 */
export type RepositoryStats = Message<"idp.repository.v1.RepositoryStats"> & {
  /**
   * @generated from field: int32 file_count = 1;
   */
  fileCount: number;

  /**
   * @generated from field: int64 size_bytes = 2;
   */
  sizeBytes: bigint;

  /**
   * @generated from field: int32 commit_count = 3;
   */
  commitCount: number;

  /**
   * @generated from field: google.protobuf.Timestamp last_commit_at = 4;
   */
  lastCommitAt?: Timestamp;

  /**
   * @generated from field: int32 dependency_count = 5;
   */
  dependencyCount: number;

  /**
   * @generated from field: int32 dependent_count = 6;
   */
  dependentCount: number;
};

/**
 * Describes the message idp.repository.v1.RepositoryStats.
 * Use `create(RepositoryStatsSchema)` to create a new message.
 */
export const RepositoryStatsSchema: GenMessage<RepositoryStats> = /*@__PURE__*/
  messageDesc(file_repository, 7);

/**
 * Template definition
 *
 * @generated from message idp.repository.v1.Template
 */
export type Template = Message<"idp.repository.v1.Template"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: string language = 4;
   */
  language: string;

  /**
   * @generated from field: string framework = 5;
   */
  framework: string;

  /**
   * @generated from field: idp.repository.v1.RepositoryType type = 6;
   */
  type: RepositoryType;

  /**
   * @generated from field: repeated idp.repository.v1.RepositoryVariable variables = 7;
   */
  variables: RepositoryVariable[];

  /**
   * @generated from field: idp.repository.v1.TemplateMetadata metadata = 8;
   */
  metadata?: TemplateMetadata;

  /**
   * @generated from field: repeated string tags = 9;
   */
  tags: string[];
};

/**
 * Describes the message idp.repository.v1.Template.
 * Use `create(TemplateSchema)` to create a new message.
 */
export const TemplateSchema: GenMessage<Template> = /*@__PURE__*/
  messageDesc(file_repository, 8);

/**
 * @generated from message idp.repository.v1.TemplateMetadata
 */
export type TemplateMetadata = Message<"idp.repository.v1.TemplateMetadata"> & {
  /**
   * @generated from field: string version = 1;
   */
  version: string;

  /**
   * @generated from field: string author = 2;
   */
  author: string;

  /**
   * @generated from field: string license = 3;
   */
  license: string;

  /**
   * @generated from field: string documentation_url = 4;
   */
  documentationUrl: string;

  /**
   * @generated from field: string source_url = 5;
   */
  sourceUrl: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 6;
   */
  createdAt?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp updated_at = 7;
   */
  updatedAt?: Timestamp;
};

/**
 * Describes the message idp.repository.v1.TemplateMetadata.
 * Use `create(TemplateMetadataSchema)` to create a new message.
 */
export const TemplateMetadataSchema: GenMessage<TemplateMetadata> = /*@__PURE__*/
  messageDesc(file_repository, 9);

/**
 * @generated from message idp.repository.v1.CreateRepositoryRequest
 */
export type CreateRepositoryRequest = Message<"idp.repository.v1.CreateRepositoryRequest"> & {
  /**
   * @generated from field: string workspace_id = 1;
   */
  workspaceId: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string slug = 3;
   */
  slug: string;

  /**
   * @generated from field: string description = 4;
   */
  description: string;

  /**
   * @generated from field: string template_id = 5;
   */
  templateId: string;

  /**
   * @generated from field: idp.common.v1.Visibility visibility = 6;
   */
  visibility: Visibility;

  /**
   * @generated from field: repeated idp.repository.v1.RepositoryVariable variables = 7;
   */
  variables: RepositoryVariable[];

  /**
   * @generated from field: bool generate_immediately = 8;
   */
  generateImmediately: boolean;
};

/**
 * Describes the message idp.repository.v1.CreateRepositoryRequest.
 * Use `create(CreateRepositoryRequestSchema)` to create a new message.
 */
export const CreateRepositoryRequestSchema: GenMessage<CreateRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_repository, 10);

/**
 * @generated from message idp.repository.v1.CreateRepositoryResponse
 */
export type CreateRepositoryResponse = Message<"idp.repository.v1.CreateRepositoryResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: idp.repository.v1.Repository repository = 2;
   */
  repository?: Repository;
};

/**
 * Describes the message idp.repository.v1.CreateRepositoryResponse.
 * Use `create(CreateRepositoryResponseSchema)` to create a new message.
 */
export const CreateRepositoryResponseSchema: GenMessage<CreateRepositoryResponse> = /*@__PURE__*/
  messageDesc(file_repository, 11);

/**
 * @generated from message idp.repository.v1.GetRepositoryRequest
 */
export type GetRepositoryRequest = Message<"idp.repository.v1.GetRepositoryRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message idp.repository.v1.GetRepositoryRequest.
 * Use `create(GetRepositoryRequestSchema)` to create a new message.
 */
export const GetRepositoryRequestSchema: GenMessage<GetRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_repository, 12);

/**
 * @generated from message idp.repository.v1.GetRepositoryResponse
 */
export type GetRepositoryResponse = Message<"idp.repository.v1.GetRepositoryResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: idp.repository.v1.Repository repository = 2;
   */
  repository?: Repository;
};

/**
 * Describes the message idp.repository.v1.GetRepositoryResponse.
 * Use `create(GetRepositoryResponseSchema)` to create a new message.
 */
export const GetRepositoryResponseSchema: GenMessage<GetRepositoryResponse> = /*@__PURE__*/
  messageDesc(file_repository, 13);

/**
 * @generated from message idp.repository.v1.ListRepositoriesRequest
 */
export type ListRepositoriesRequest = Message<"idp.repository.v1.ListRepositoriesRequest"> & {
  /**
   * @generated from field: string workspace_id = 1;
   */
  workspaceId: string;

  /**
   * @generated from field: idp.common.v1.PaginationRequest pagination = 2;
   */
  pagination?: PaginationRequest;

  /**
   * @generated from field: repeated idp.common.v1.Filter filters = 3;
   */
  filters: Filter[];

  /**
   * @generated from field: repeated idp.common.v1.Sort sort = 4;
   */
  sort: Sort[];
};

/**
 * Describes the message idp.repository.v1.ListRepositoriesRequest.
 * Use `create(ListRepositoriesRequestSchema)` to create a new message.
 */
export const ListRepositoriesRequestSchema: GenMessage<ListRepositoriesRequest> = /*@__PURE__*/
  messageDesc(file_repository, 14);

/**
 * @generated from message idp.repository.v1.ListRepositoriesResponse
 */
export type ListRepositoriesResponse = Message<"idp.repository.v1.ListRepositoriesResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: repeated idp.repository.v1.Repository repositories = 2;
   */
  repositories: Repository[];

  /**
   * @generated from field: idp.common.v1.PaginationResponse pagination = 3;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message idp.repository.v1.ListRepositoriesResponse.
 * Use `create(ListRepositoriesResponseSchema)` to create a new message.
 */
export const ListRepositoriesResponseSchema: GenMessage<ListRepositoriesResponse> = /*@__PURE__*/
  messageDesc(file_repository, 15);

/**
 * @generated from message idp.repository.v1.UpdateRepositoryRequest
 */
export type UpdateRepositoryRequest = Message<"idp.repository.v1.UpdateRepositoryRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string description = 3;
   */
  description: string;

  /**
   * @generated from field: idp.common.v1.Visibility visibility = 4;
   */
  visibility: Visibility;

  /**
   * @generated from field: repeated idp.repository.v1.RepositoryVariable variables = 5;
   */
  variables: RepositoryVariable[];
};

/**
 * Describes the message idp.repository.v1.UpdateRepositoryRequest.
 * Use `create(UpdateRepositoryRequestSchema)` to create a new message.
 */
export const UpdateRepositoryRequestSchema: GenMessage<UpdateRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_repository, 16);

/**
 * @generated from message idp.repository.v1.UpdateRepositoryResponse
 */
export type UpdateRepositoryResponse = Message<"idp.repository.v1.UpdateRepositoryResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: idp.repository.v1.Repository repository = 2;
   */
  repository?: Repository;
};

/**
 * Describes the message idp.repository.v1.UpdateRepositoryResponse.
 * Use `create(UpdateRepositoryResponseSchema)` to create a new message.
 */
export const UpdateRepositoryResponseSchema: GenMessage<UpdateRepositoryResponse> = /*@__PURE__*/
  messageDesc(file_repository, 17);

/**
 * @generated from message idp.repository.v1.DeleteRepositoryRequest
 */
export type DeleteRepositoryRequest = Message<"idp.repository.v1.DeleteRepositoryRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message idp.repository.v1.DeleteRepositoryRequest.
 * Use `create(DeleteRepositoryRequestSchema)` to create a new message.
 */
export const DeleteRepositoryRequestSchema: GenMessage<DeleteRepositoryRequest> = /*@__PURE__*/
  messageDesc(file_repository, 18);

/**
 * @generated from message idp.repository.v1.DeleteRepositoryResponse
 */
export type DeleteRepositoryResponse = Message<"idp.repository.v1.DeleteRepositoryResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;
};

/**
 * Describes the message idp.repository.v1.DeleteRepositoryResponse.
 * Use `create(DeleteRepositoryResponseSchema)` to create a new message.
 */
export const DeleteRepositoryResponseSchema: GenMessage<DeleteRepositoryResponse> = /*@__PURE__*/
  messageDesc(file_repository, 19);

/**
 * Code generation
 *
 * @generated from message idp.repository.v1.GenerateCodeRequest
 */
export type GenerateCodeRequest = Message<"idp.repository.v1.GenerateCodeRequest"> & {
  /**
   * @generated from field: string repository_id = 1;
   */
  repositoryId: string;

  /**
   * @generated from field: bool force_regenerate = 2;
   */
  forceRegenerate: boolean;
};

/**
 * Describes the message idp.repository.v1.GenerateCodeRequest.
 * Use `create(GenerateCodeRequestSchema)` to create a new message.
 */
export const GenerateCodeRequestSchema: GenMessage<GenerateCodeRequest> = /*@__PURE__*/
  messageDesc(file_repository, 20);

/**
 * @generated from message idp.repository.v1.GenerateCodeResponse
 */
export type GenerateCodeResponse = Message<"idp.repository.v1.GenerateCodeResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: string job_id = 2;
   */
  jobId: string;

  /**
   * @generated from field: idp.repository.v1.GenerationStatus status = 3;
   */
  status: GenerationStatus;
};

/**
 * Describes the message idp.repository.v1.GenerateCodeResponse.
 * Use `create(GenerateCodeResponseSchema)` to create a new message.
 */
export const GenerateCodeResponseSchema: GenMessage<GenerateCodeResponse> = /*@__PURE__*/
  messageDesc(file_repository, 21);

/**
 * @generated from message idp.repository.v1.GetGenerationStatusRequest
 */
export type GetGenerationStatusRequest = Message<"idp.repository.v1.GetGenerationStatusRequest"> & {
  /**
   * @generated from field: string repository_id = 1;
   */
  repositoryId: string;

  /**
   * @generated from field: string job_id = 2;
   */
  jobId: string;
};

/**
 * Describes the message idp.repository.v1.GetGenerationStatusRequest.
 * Use `create(GetGenerationStatusRequestSchema)` to create a new message.
 */
export const GetGenerationStatusRequestSchema: GenMessage<GetGenerationStatusRequest> = /*@__PURE__*/
  messageDesc(file_repository, 22);

/**
 * @generated from message idp.repository.v1.GetGenerationStatusResponse
 */
export type GetGenerationStatusResponse = Message<"idp.repository.v1.GetGenerationStatusResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: idp.repository.v1.GenerationStatus status = 2;
   */
  status: GenerationStatus;

  /**
   * @generated from field: string progress = 3;
   */
  progress: string;

  /**
   * @generated from field: repeated string logs = 4;
   */
  logs: string[];

  /**
   * @generated from field: string error_message = 5;
   */
  errorMessage: string;
};

/**
 * Describes the message idp.repository.v1.GetGenerationStatusResponse.
 * Use `create(GetGenerationStatusResponseSchema)` to create a new message.
 */
export const GetGenerationStatusResponseSchema: GenMessage<GetGenerationStatusResponse> = /*@__PURE__*/
  messageDesc(file_repository, 23);

/**
 * Template management
 *
 * @generated from message idp.repository.v1.ListTemplatesRequest
 */
export type ListTemplatesRequest = Message<"idp.repository.v1.ListTemplatesRequest"> & {
  /**
   * @generated from field: idp.common.v1.PaginationRequest pagination = 1;
   */
  pagination?: PaginationRequest;

  /**
   * @generated from field: repeated idp.common.v1.Filter filters = 2;
   */
  filters: Filter[];

  /**
   * @generated from field: repeated idp.common.v1.Sort sort = 3;
   */
  sort: Sort[];
};

/**
 * Describes the message idp.repository.v1.ListTemplatesRequest.
 * Use `create(ListTemplatesRequestSchema)` to create a new message.
 */
export const ListTemplatesRequestSchema: GenMessage<ListTemplatesRequest> = /*@__PURE__*/
  messageDesc(file_repository, 24);

/**
 * @generated from message idp.repository.v1.ListTemplatesResponse
 */
export type ListTemplatesResponse = Message<"idp.repository.v1.ListTemplatesResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: repeated idp.repository.v1.Template templates = 2;
   */
  templates: Template[];

  /**
   * @generated from field: idp.common.v1.PaginationResponse pagination = 3;
   */
  pagination?: PaginationResponse;
};

/**
 * Describes the message idp.repository.v1.ListTemplatesResponse.
 * Use `create(ListTemplatesResponseSchema)` to create a new message.
 */
export const ListTemplatesResponseSchema: GenMessage<ListTemplatesResponse> = /*@__PURE__*/
  messageDesc(file_repository, 25);

/**
 * @generated from message idp.repository.v1.GetTemplateRequest
 */
export type GetTemplateRequest = Message<"idp.repository.v1.GetTemplateRequest"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;
};

/**
 * Describes the message idp.repository.v1.GetTemplateRequest.
 * Use `create(GetTemplateRequestSchema)` to create a new message.
 */
export const GetTemplateRequestSchema: GenMessage<GetTemplateRequest> = /*@__PURE__*/
  messageDesc(file_repository, 26);

/**
 * @generated from message idp.repository.v1.GetTemplateResponse
 */
export type GetTemplateResponse = Message<"idp.repository.v1.GetTemplateResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: idp.repository.v1.Template template = 2;
   */
  template?: Template;
};

/**
 * Describes the message idp.repository.v1.GetTemplateResponse.
 * Use `create(GetTemplateResponseSchema)` to create a new message.
 */
export const GetTemplateResponseSchema: GenMessage<GetTemplateResponse> = /*@__PURE__*/
  messageDesc(file_repository, 27);

/**
 * Dependencies
 *
 * @generated from message idp.repository.v1.AddDependencyRequest
 */
export type AddDependencyRequest = Message<"idp.repository.v1.AddDependencyRequest"> & {
  /**
   * @generated from field: string repository_id = 1;
   */
  repositoryId: string;

  /**
   * @generated from field: string dependency_id = 2;
   */
  dependencyId: string;

  /**
   * "depends_on", "implements", "extends"
   *
   * @generated from field: string relationship_type = 3;
   */
  relationshipType: string;
};

/**
 * Describes the message idp.repository.v1.AddDependencyRequest.
 * Use `create(AddDependencyRequestSchema)` to create a new message.
 */
export const AddDependencyRequestSchema: GenMessage<AddDependencyRequest> = /*@__PURE__*/
  messageDesc(file_repository, 28);

/**
 * @generated from message idp.repository.v1.AddDependencyResponse
 */
export type AddDependencyResponse = Message<"idp.repository.v1.AddDependencyResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;
};

/**
 * Describes the message idp.repository.v1.AddDependencyResponse.
 * Use `create(AddDependencyResponseSchema)` to create a new message.
 */
export const AddDependencyResponseSchema: GenMessage<AddDependencyResponse> = /*@__PURE__*/
  messageDesc(file_repository, 29);

/**
 * @generated from message idp.repository.v1.RemoveDependencyRequest
 */
export type RemoveDependencyRequest = Message<"idp.repository.v1.RemoveDependencyRequest"> & {
  /**
   * @generated from field: string repository_id = 1;
   */
  repositoryId: string;

  /**
   * @generated from field: string dependency_id = 2;
   */
  dependencyId: string;
};

/**
 * Describes the message idp.repository.v1.RemoveDependencyRequest.
 * Use `create(RemoveDependencyRequestSchema)` to create a new message.
 */
export const RemoveDependencyRequestSchema: GenMessage<RemoveDependencyRequest> = /*@__PURE__*/
  messageDesc(file_repository, 30);

/**
 * @generated from message idp.repository.v1.RemoveDependencyResponse
 */
export type RemoveDependencyResponse = Message<"idp.repository.v1.RemoveDependencyResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;
};

/**
 * Describes the message idp.repository.v1.RemoveDependencyResponse.
 * Use `create(RemoveDependencyResponseSchema)` to create a new message.
 */
export const RemoveDependencyResponseSchema: GenMessage<RemoveDependencyResponse> = /*@__PURE__*/
  messageDesc(file_repository, 31);

/**
 * @generated from message idp.repository.v1.ListDependenciesRequest
 */
export type ListDependenciesRequest = Message<"idp.repository.v1.ListDependenciesRequest"> & {
  /**
   * @generated from field: string repository_id = 1;
   */
  repositoryId: string;

  /**
   * "dependencies", "dependents", "both"
   *
   * @generated from field: string direction = 2;
   */
  direction: string;
};

/**
 * Describes the message idp.repository.v1.ListDependenciesRequest.
 * Use `create(ListDependenciesRequestSchema)` to create a new message.
 */
export const ListDependenciesRequestSchema: GenMessage<ListDependenciesRequest> = /*@__PURE__*/
  messageDesc(file_repository, 32);

/**
 * @generated from message idp.repository.v1.ListDependenciesResponse
 */
export type ListDependenciesResponse = Message<"idp.repository.v1.ListDependenciesResponse"> & {
  /**
   * @generated from field: idp.common.v1.Response response = 1;
   */
  response?: Response;

  /**
   * @generated from field: repeated idp.repository.v1.RepositoryDependency dependencies = 2;
   */
  dependencies: RepositoryDependency[];
};

/**
 * Describes the message idp.repository.v1.ListDependenciesResponse.
 * Use `create(ListDependenciesResponseSchema)` to create a new message.
 */
export const ListDependenciesResponseSchema: GenMessage<ListDependenciesResponse> = /*@__PURE__*/
  messageDesc(file_repository, 33);

/**
 * @generated from message idp.repository.v1.RepositoryDependency
 */
export type RepositoryDependency = Message<"idp.repository.v1.RepositoryDependency"> & {
  /**
   * @generated from field: idp.repository.v1.Repository repository = 1;
   */
  repository?: Repository;

  /**
   * @generated from field: string relationship_type = 2;
   */
  relationshipType: string;

  /**
   * @generated from field: google.protobuf.Timestamp created_at = 3;
   */
  createdAt?: Timestamp;
};

/**
 * Describes the message idp.repository.v1.RepositoryDependency.
 * Use `create(RepositoryDependencySchema)` to create a new message.
 */
export const RepositoryDependencySchema: GenMessage<RepositoryDependency> = /*@__PURE__*/
  messageDesc(file_repository, 34);

/**
 * @generated from enum idp.repository.v1.RepositoryType
 */
export enum RepositoryType {
  /**
   * @generated from enum value: REPOSITORY_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: REPOSITORY_TYPE_SERVICE = 1;
   */
  SERVICE = 1,

  /**
   * @generated from enum value: REPOSITORY_TYPE_LIBRARY = 2;
   */
  LIBRARY = 2,

  /**
   * @generated from enum value: REPOSITORY_TYPE_FRONTEND = 3;
   */
  FRONTEND = 3,

  /**
   * @generated from enum value: REPOSITORY_TYPE_MOBILE = 4;
   */
  MOBILE = 4,

  /**
   * @generated from enum value: REPOSITORY_TYPE_DOCUMENTATION = 5;
   */
  DOCUMENTATION = 5,
}

/**
 * Describes the enum idp.repository.v1.RepositoryType.
 */
export const RepositoryTypeSchema: GenEnum<RepositoryType> = /*@__PURE__*/
  enumDesc(file_repository, 0);

/**
 * @generated from enum idp.repository.v1.VariableType
 */
export enum VariableType {
  /**
   * @generated from enum value: VARIABLE_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: VARIABLE_TYPE_STRING = 1;
   */
  STRING = 1,

  /**
   * @generated from enum value: VARIABLE_TYPE_NUMBER = 2;
   */
  NUMBER = 2,

  /**
   * @generated from enum value: VARIABLE_TYPE_BOOLEAN = 3;
   */
  BOOLEAN = 3,

  /**
   * @generated from enum value: VARIABLE_TYPE_SELECT = 4;
   */
  SELECT = 4,

  /**
   * @generated from enum value: VARIABLE_TYPE_MULTISELECT = 5;
   */
  MULTISELECT = 5,
}

/**
 * Describes the enum idp.repository.v1.VariableType.
 */
export const VariableTypeSchema: GenEnum<VariableType> = /*@__PURE__*/
  enumDesc(file_repository, 1);

/**
 * Generation status
 *
 * @generated from enum idp.repository.v1.GenerationStatus
 */
export enum GenerationStatus {
  /**
   * @generated from enum value: GENERATION_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: GENERATION_STATUS_PENDING = 1;
   */
  PENDING = 1,

  /**
   * @generated from enum value: GENERATION_STATUS_GENERATING = 2;
   */
  GENERATING = 2,

  /**
   * @generated from enum value: GENERATION_STATUS_COMPLETED = 3;
   */
  COMPLETED = 3,

  /**
   * @generated from enum value: GENERATION_STATUS_FAILED = 4;
   */
  FAILED = 4,
}

/**
 * Describes the enum idp.repository.v1.GenerationStatus.
 */
export const GenerationStatusSchema: GenEnum<GenerationStatus> = /*@__PURE__*/
  enumDesc(file_repository, 2);

/**
 * Repository Management Service
 *
 * @generated from service idp.repository.v1.RepositoryService
 */
export const RepositoryService: GenService<{
  /**
   * Create repository from template
   *
   * @generated from rpc idp.repository.v1.RepositoryService.CreateRepository
   */
  createRepository: {
    methodKind: "unary";
    input: typeof CreateRepositoryRequestSchema;
    output: typeof CreateRepositoryResponseSchema;
  },
  /**
   * Get repository by ID
   *
   * @generated from rpc idp.repository.v1.RepositoryService.GetRepository
   */
  getRepository: {
    methodKind: "unary";
    input: typeof GetRepositoryRequestSchema;
    output: typeof GetRepositoryResponseSchema;
  },
  /**
   * List repositories in workspace
   *
   * @generated from rpc idp.repository.v1.RepositoryService.ListRepositories
   */
  listRepositories: {
    methodKind: "unary";
    input: typeof ListRepositoriesRequestSchema;
    output: typeof ListRepositoriesResponseSchema;
  },
  /**
   * Update repository
   *
   * @generated from rpc idp.repository.v1.RepositoryService.UpdateRepository
   */
  updateRepository: {
    methodKind: "unary";
    input: typeof UpdateRepositoryRequestSchema;
    output: typeof UpdateRepositoryResponseSchema;
  },
  /**
   * Delete repository
   *
   * @generated from rpc idp.repository.v1.RepositoryService.DeleteRepository
   */
  deleteRepository: {
    methodKind: "unary";
    input: typeof DeleteRepositoryRequestSchema;
    output: typeof DeleteRepositoryResponseSchema;
  },
  /**
   * Code generation
   *
   * @generated from rpc idp.repository.v1.RepositoryService.GenerateCode
   */
  generateCode: {
    methodKind: "unary";
    input: typeof GenerateCodeRequestSchema;
    output: typeof GenerateCodeResponseSchema;
  },
  /**
   * @generated from rpc idp.repository.v1.RepositoryService.GetGenerationStatus
   */
  getGenerationStatus: {
    methodKind: "unary";
    input: typeof GetGenerationStatusRequestSchema;
    output: typeof GetGenerationStatusResponseSchema;
  },
  /**
   * Template management
   *
   * @generated from rpc idp.repository.v1.RepositoryService.ListTemplates
   */
  listTemplates: {
    methodKind: "unary";
    input: typeof ListTemplatesRequestSchema;
    output: typeof ListTemplatesResponseSchema;
  },
  /**
   * @generated from rpc idp.repository.v1.RepositoryService.GetTemplate
   */
  getTemplate: {
    methodKind: "unary";
    input: typeof GetTemplateRequestSchema;
    output: typeof GetTemplateResponseSchema;
  },
  /**
   * Dependencies
   *
   * @generated from rpc idp.repository.v1.RepositoryService.AddDependency
   */
  addDependency: {
    methodKind: "unary";
    input: typeof AddDependencyRequestSchema;
    output: typeof AddDependencyResponseSchema;
  },
  /**
   * @generated from rpc idp.repository.v1.RepositoryService.RemoveDependency
   */
  removeDependency: {
    methodKind: "unary";
    input: typeof RemoveDependencyRequestSchema;
    output: typeof RemoveDependencyResponseSchema;
  },
  /**
   * @generated from rpc idp.repository.v1.RepositoryService.ListDependencies
   */
  listDependencies: {
    methodKind: "unary";
    input: typeof ListDependenciesRequestSchema;
    output: typeof ListDependenciesResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_repository, 0);

