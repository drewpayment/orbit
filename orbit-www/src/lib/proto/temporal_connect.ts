// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file temporal.proto (package idp.temporal.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CancelWorkflowRequest, CancelWorkflowResponse, CodeGenerationWorkflowRequest, GetWorkflowStatusRequest, GetWorkflowStatusResponse, KnowledgeSyncWorkflowRequest, ListWorkflowsRequest, ListWorkflowsResponse, RepositoryGenerationWorkflowRequest, WorkflowExecutionResponse } from "./temporal_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Workflow Management Service
 *
 * @generated from service idp.temporal.v1.WorkflowService
 */
export const WorkflowService = {
  typeName: "idp.temporal.v1.WorkflowService",
  methods: {
    /**
     * Start repository generation workflow
     *
     * @generated from rpc idp.temporal.v1.WorkflowService.StartRepositoryGeneration
     */
    startRepositoryGeneration: {
      name: "StartRepositoryGeneration",
      I: RepositoryGenerationWorkflowRequest,
      O: WorkflowExecutionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Start code generation workflow
     *
     * @generated from rpc idp.temporal.v1.WorkflowService.StartCodeGeneration
     */
    startCodeGeneration: {
      name: "StartCodeGeneration",
      I: CodeGenerationWorkflowRequest,
      O: WorkflowExecutionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Start knowledge synchronization workflow
     *
     * @generated from rpc idp.temporal.v1.WorkflowService.StartKnowledgeSync
     */
    startKnowledgeSync: {
      name: "StartKnowledgeSync",
      I: KnowledgeSyncWorkflowRequest,
      O: WorkflowExecutionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get workflow status
     *
     * @generated from rpc idp.temporal.v1.WorkflowService.GetWorkflowStatus
     */
    getWorkflowStatus: {
      name: "GetWorkflowStatus",
      I: GetWorkflowStatusRequest,
      O: GetWorkflowStatusResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Cancel workflow
     *
     * @generated from rpc idp.temporal.v1.WorkflowService.CancelWorkflow
     */
    cancelWorkflow: {
      name: "CancelWorkflow",
      I: CancelWorkflowRequest,
      O: CancelWorkflowResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List workflows for workspace
     *
     * @generated from rpc idp.temporal.v1.WorkflowService.ListWorkflows
     */
    listWorkflows: {
      name: "ListWorkflows",
      I: ListWorkflowsRequest,
      O: ListWorkflowsResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

