// @generated by protoc-gen-connect-es v1.6.1 with parameter "target=ts"
// @generated from file repository.proto (package idp.repository.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AddDependencyRequest, AddDependencyResponse, CreateRepositoryRequest, CreateRepositoryResponse, DeleteRepositoryRequest, DeleteRepositoryResponse, GenerateCodeRequest, GenerateCodeResponse, GetGenerationStatusRequest, GetGenerationStatusResponse, GetRepositoryRequest, GetRepositoryResponse, GetTemplateRequest, GetTemplateResponse, ListDependenciesRequest, ListDependenciesResponse, ListRepositoriesRequest, ListRepositoriesResponse, ListTemplatesRequest, ListTemplatesResponse, RemoveDependencyRequest, RemoveDependencyResponse, UpdateRepositoryRequest, UpdateRepositoryResponse } from "./repository_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Repository Management Service
 *
 * @generated from service idp.repository.v1.RepositoryService
 */
export const RepositoryService = {
  typeName: "idp.repository.v1.RepositoryService",
  methods: {
    /**
     * Create repository from template
     *
     * @generated from rpc idp.repository.v1.RepositoryService.CreateRepository
     */
    createRepository: {
      name: "CreateRepository",
      I: CreateRepositoryRequest,
      O: CreateRepositoryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get repository by ID
     *
     * @generated from rpc idp.repository.v1.RepositoryService.GetRepository
     */
    getRepository: {
      name: "GetRepository",
      I: GetRepositoryRequest,
      O: GetRepositoryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List repositories in workspace
     *
     * @generated from rpc idp.repository.v1.RepositoryService.ListRepositories
     */
    listRepositories: {
      name: "ListRepositories",
      I: ListRepositoriesRequest,
      O: ListRepositoriesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update repository
     *
     * @generated from rpc idp.repository.v1.RepositoryService.UpdateRepository
     */
    updateRepository: {
      name: "UpdateRepository",
      I: UpdateRepositoryRequest,
      O: UpdateRepositoryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete repository
     *
     * @generated from rpc idp.repository.v1.RepositoryService.DeleteRepository
     */
    deleteRepository: {
      name: "DeleteRepository",
      I: DeleteRepositoryRequest,
      O: DeleteRepositoryResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Code generation
     *
     * @generated from rpc idp.repository.v1.RepositoryService.GenerateCode
     */
    generateCode: {
      name: "GenerateCode",
      I: GenerateCodeRequest,
      O: GenerateCodeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc idp.repository.v1.RepositoryService.GetGenerationStatus
     */
    getGenerationStatus: {
      name: "GetGenerationStatus",
      I: GetGenerationStatusRequest,
      O: GetGenerationStatusResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Template management
     *
     * @generated from rpc idp.repository.v1.RepositoryService.ListTemplates
     */
    listTemplates: {
      name: "ListTemplates",
      I: ListTemplatesRequest,
      O: ListTemplatesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc idp.repository.v1.RepositoryService.GetTemplate
     */
    getTemplate: {
      name: "GetTemplate",
      I: GetTemplateRequest,
      O: GetTemplateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Dependencies
     *
     * @generated from rpc idp.repository.v1.RepositoryService.AddDependency
     */
    addDependency: {
      name: "AddDependency",
      I: AddDependencyRequest,
      O: AddDependencyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc idp.repository.v1.RepositoryService.RemoveDependency
     */
    removeDependency: {
      name: "RemoveDependency",
      I: RemoveDependencyRequest,
      O: RemoveDependencyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc idp.repository.v1.RepositoryService.ListDependencies
     */
    listDependencies: {
      name: "ListDependencies",
      I: ListDependenciesRequest,
      O: ListDependenciesResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

